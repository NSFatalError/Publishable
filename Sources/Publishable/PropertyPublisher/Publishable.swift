//
//  Publishable.swift
//  Publishable
//
//  Created by Kamil Strzelecki on 12/01/2025.
//  Copyright © 2025 Kamil Strzelecki. All rights reserved.
//

import Observation

/// A macro that adds ``Publishable-protocol`` conformance to `Observable` types.
///
/// - Note: This macro works only with `final` classes to which the `Observable` or `SwiftData.Model` macro has been applied directly.
///
/// The `Publishable` macro adds a new ``Publishable/publisher`` property to your type,
/// which exposes `Combine` publishers for all mutable instance properties - both stored and computed.
///
/// If a property’s type conforms to `Equatable`, its publisher automatically removes duplicate values.
/// Just like the `Published` property wrapper, subscribing to any of the exposed publishers immediately emits the current value.
///
/// - Important: Swift Macros do not have access to full type information of expressions used in the code they’re applied to.
/// Since working with `Combine` requires knowledge of concrete types, this macro attempts to infer the types of properties when they are not explicitly specified.
/// However, this inference may fail in non-trivial cases. If the generated code fails to compile, explicitly specifying the type of the affected property should resolve the issue.
///
@attached(
    member,
    names: named(_publisher),
    named(publisher),
    named(PropertyPublisher),
    named(Observation)
)
@attached(
    extension,
    conformances: Publishable
)
public macro Publishable() = #externalMacro(
    module: "PublishableMacros",
    type: "PublishableMacro"
)

/// A type that can be observed using both the `Observation` and `Combine` frameworks.
///
/// You don't need to declare conformance to this protocol yourself.
/// It is generated automatically when you apply the ``Publishable()`` macro to your type.
///
public protocol Publishable: AnyObject, Observable {

    /// A subclass of ``AnyPropertyPublisher`` generated by the ``Publishable()`` macro,
    /// containing publishers for all mutable instance properties of the type.
    ///
    associatedtype PropertyPublisher: AnyPropertyPublisher<Self>

    /// An instance that exposes `Combine` publishers for all mutable instance properties of the type.
    ///
    /// - Important: Don't store this instance in an external property. Accessing it after the original object has been deallocated
    /// may result in a crash. Always access it directly through the object that exposes it.
    ///
    var publisher: PropertyPublisher { get }
}
